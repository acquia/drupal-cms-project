name: Build and install Drupal CMS

on: [push, pull_request]

permissions:
  contents: read

jobs:
  build-install:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: drupal
          MYSQL_PASSWORD: drupal
          MYSQL_ROOT_PASSWORD: drupal
          MYSQL_ROOT_HOST: "%"
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot
          mysql -e 'CREATE USER "drupal"@"localhost" IDENTIFIED BY "drupal";' -uroot -proot
          mysql -e 'GRANT ALL PRIVILEGES ON *.* TO "drupal"@"localhost" WITH GRANT OPTION;' -uroot -proot
          mysql -e 'FLUSH PRIVILEGES;' -uroot -proot
          mysql -e 'SHOW GRANTS FOR "drupal"@"localhost";' -uroot -proot

      - name: Validate composer.json and composer.lock
        run: composer validate --no-check-all

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install Drupal CMS
        run:  ./vendor/bin/drush site:install --yes
